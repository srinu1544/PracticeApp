package com.example.practiceapp.Kotlin.keywords

/*

 field (backing field) :
 ------------------------

->  backing field is represented by "field"  keyword it just stores the value of own property
-> it is used because usage of property name in setter and getter throws stackoverflow exception
->  The backing field is generated by kotlin internally only when it is used in the code
-> backing field can never be used other methods apart from getter and setter

In Kotlin, a field is only used as a part of a property to hold its value in memory.
Fields cannot be declared directly. However, when a property needs a backing field,
 Kotlin provides it automatically.*/


class Student {

    var marks : Int = 20
        get() {
            println(marks)  // here if you use println("$marks") means getting stack overflow error
            //println("$field")  // field keyword store the value "marks" property
            return field
        }

        set(value) {
            if (value > 0 ){
                println("$value")
                field = value
                marks = value     //  here stackover flow exception
            }
        }
}

fun main() {

    val student = Student()
    student.marks = 55
    println(student.marks)
}